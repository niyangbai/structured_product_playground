"use strict";(self.webpackChunkstructured_product_builder=self.webpackChunkstructured_product_builder||[]).push([[211],{211:(t,e,r)=>{r.d(e,{SimulationEngine:()=>o});class o{constructor(t,e){this.bricks=void 0,this.connections=void 0,this.bricks=t,this.connections=e}async simulate(t){const{parameters:e}=t,r=[],o=this.generatePricePath(t);let i=0,s=0,a=0,n=0;for(let c=0;c<o.length;c++){const l=c/(o.length-1)*e.timeHorizon,p=o[c],h=this.calculateStepPayoff(p,l,t);i+=h,s=Math.max(s,i),a=Math.min(a,i),i>0&&n++,r.push({time:l,spotPrice:p,payoff:h,cumulativePayoff:i,triggerEvents:this.detectTriggerEvents(p,l)})}return{scenario:t,payoffData:r,finalPayoff:i,maxDrawdown:a,maxGain:s,probabilityOfProfit:n/o.length}}generatePricePath(t){const{startPrice:e,endPrice:r,volatility:o,drift:i,timeHorizon:s,steps:a}=t.parameters,n=s/a,c=[e];let l=e;for(let p=1;p<=a;p++){const e=this.boxMullerRandom();let r=0;switch(t.type){case"uptrend":case"downtrend":default:r=l*(i*n+o*Math.sqrt(n)*e);break;case"flat":r=l*(o*Math.sqrt(n)*e);break;case"volatile":r=l*(i*n+o*Math.sqrt(n)*e*1.5)}l=Math.max(.01,l+r),c.push(l)}if(void 0!==r&&"custom"!==t.type){const t=r/l;for(let e=1;e<c.length;e++){const r=Math.pow(t,e/(c.length-1));c[e]*=r}}return c}calculateStepPayoff(t,e,r){this.bricks.filter(t=>"UnderlyingAsset"===t.type);const o=this.bricks.filter(t=>"option"===t.category);let i=0;for(const s of o)switch(s.type){case"VanillaOption":const e=s.properties.strike,r="call"===s.properties.optionType,o="long"===s.properties.position;let a=r?Math.max(0,t-e):Math.max(0,e-t);a*=o?1:-1,a*=s.properties.notional/1e3,i+=a;break;case"DigitalOption":const n=s.properties.strike,c=s.properties.payoutAmount;i+=("above"===s.properties.barrier?t>=n:t<=n)?c:0}return i}detectTriggerEvents(t,e){const r=[],o=this.bricks.filter(t=>"BarrierTrigger"===t.type);for(const s of o){const e=s.properties.barrierLevel,o=s.properties.triggerType;("above"===o&&t>=e||"below"===o&&t<=e||"touch"===o&&Math.abs(t-e)<.01)&&r.push(`Barrier ${o} ${e} triggered`)}const i=this.bricks.filter(t=>"AutocallTrigger"===t.type);for(const s of i){const e=s.properties.autocallLevel;t>=e&&r.push(`Autocall at ${e} triggered`)}return r}boxMullerRandom(){const t=Math.random(),e=Math.random();return Math.sqrt(-2*Math.log(t))*Math.cos(2*Math.PI*e)}}}}]);
//# sourceMappingURL=211.6725bc65.chunk.js.map